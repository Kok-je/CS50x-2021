# include <cs50.h>
# include <stdio.h>
# include <math.h>

int main(void)
{
    // Declare and initialize a variable and ask for user input.
    long long cardnumber;

    // Ask for credit card number

    do
    {
    cardnumber = get_long_long("What is your card number? ");
    }
    while (cardnumber < 0);

    // Determine whether it has a valid number of digits
    int count = 0;
    long long digits = cardnumber;

    while (digits > 0)
    {
        digits = digits/10;
        count++;
    }

    if ((count != 13) && (count != 15) && (count != 16))
    {
        printf("INVALID\n");
    }

    int number[count];                   //define new int array
    for(int i = 0; i < count; i++)
    {
        number[i] = cardnumber % 10;      //basically finding the last digit of the integer. 769/10=76.9=76R9
        cardnumber = cardnumber / 10;     //cardnumber is a lli type, hence ignore decimals
    }

    int originalnumber[count];            //define new array
    for (int i = 1; i < count; i++)
    {
        originalnumber[i] = number[i];
    }

    for (int i = 1; i < count; i+=2)
    {
        number[i] = number[i] * 2;        //starting with second-to-last digit, mutiply every other digit by two, 1,3,5,7...
    }

    int totalsum = 0;                     // define new var totalsum
    int next;                             // define new var next

    if (count == 13)  //TEST FOR VISA
    {
      for (int i = 0; i < count; i++)
      {
          next = (number[i] % 10) + (number[i]/10 % 10);   //next is sum of only digits, including digits of products not products itself
          totalsum = totalsum + next;
      }

      if (originalnumber[12] == 4 && totalsum % 10 == 0)   //check if first digit == 4, totalsum last digit == 0
      {
        printf("VISA\n");
      }
      else
      {
        printf("INVALID\n");
      }
    }
    
    
    if (count == 15)  //TEST FOR AMEX
    {
      for (int i = 0; i < count; i++)
      {
          next = (number[i] % 10) + (number[i]/10 % 10);   //next is sum of only digits, including digits of products not products itself
          totalsum = totalsum + next;
      }

      if (originalnumber[14] == 3 && totalsum % 10 == 0 && (originalnumber[13] == 4 || originalnumber[13] == 7))   
      {
        printf("AMEX\n");
      }
      else
      {
        printf("INVALID\n");
      }
    }
    
    if (count == 16)   //TEST FOR VISA or MASTERCARD
    {
      for (int i = 0; i < count; i++)
      {
          next = (number[i] % 10) + (number[i]/10 % 10);   //next is sum of only digits, including digits of products not products itself
          totalsum = totalsum + next;
      }

      if (originalnumber[15] == 4 && totalsum % 10 == 0)   
      {
        printf("VISA\n");
      }
      else if (originalnumber[15] == 5 && totalsum % 10 == 0 && (originalnumber[14] == 1 || originalnumber[14] == 2
      || originalnumber[14] == 3 || originalnumber[14] == 4 || originalnumber[14] == 5))
      {
          printf("MASTERCARD\n");
      }
      else
      {
        printf("INVALID\n");
      }
    }
    
    

}
